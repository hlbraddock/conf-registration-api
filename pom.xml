<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.cru</groupId>
	<artifactId>eventhub-api</artifactId>
	<packaging>war</packaging>
	<version>1.0.0-SNAPSHOT</version>
	<name>CRS Http JSON Api</name>
	<url>...</url>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.jboss.bom</groupId>
				<artifactId>jboss-javaee-6.0-with-hibernate</artifactId>
				<version>1.0.0.Final</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
 			<dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-bom</artifactId>
				<version>1.0.2.Final</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
		</dependencies>
    </dependencyManagement>

		<distributionManagement>
			<repository>
				<id>internal.repo</id>
				<name>Temporary Staging Repository</name>
				<url>file://${project.build.directory}/mvn_repo</url>
			</repository>
		</distributionManagement>
		
	<dependencies>
        <!-- Import external dependencies that we like -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>12.0.1</version>
		</dependency>

		<dependency>
			<groupId>org.sql2o</groupId>
			<artifactId>sql2o</artifactId>
			<version>1.1.10-ryancarlson</version>
            <exclusions>
                <exclusion>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-jackson-provider</artifactId>
                </exclusion>
            </exclusions>
		</dependency>

        <!--
            explicitly defining slf4j dependency (test scope)
            prevents sql2o and rest easy transitive dependency conflict
            at time of functional test run
        -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.7</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.7.7</version>
            <scope>test</scope>
        </dependency>

        <dependency>
		    <groupId>org.jadira.usertype</groupId>
		    <artifactId>usertype.core</artifactId>
		    <version>3.0.0.GA</version>
		</dependency>
		
		<dependency>
		    <groupId>joda-time</groupId>
		    <artifactId>joda-time</artifactId>
		    <version>2.1</version>
		</dependency>
		
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.3.1</version>
		</dependency>

		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.1-901.jdbc4</version>
		</dependency>

        <dependency>
            <groupId>com.googlecode.flyway</groupId>
            <artifactId>flyway-core</artifactId>
            <version>2.3</version>
        </dependency>

		<dependency>
			<groupId>com.thetransactioncompany</groupId>
			<artifactId>cors-filter</artifactId>
			<version>1.8</version>
		</dependency>
		
		<!-- Import the APIs that we depend on and are included in JBoss AS 7 -->
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>

		<dependency>
    		<groupId>org.ccci</groupId>
    		<artifactId>red-egg</artifactId>
    		<version>1-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
			<version>3.0.8.Final</version>
			<scope>provided</scope>
		</dependency>

        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jackson2-provider</artifactId>
            <version>3.0.8.Final</version>
            <scope>provided</scope>
        </dependency>

		<!-- These two are needed for the RestEasy client. Not sure why they are not transitively pulled in. -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.3.1</version>
		</dependency>

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
		</dependency>
    
		<dependency>
			<groupId>org.cru</groupId>
			<artifactId>cas-client</artifactId>
			<version>0.1-SNAPSHOT</version>
		</dependency>
		
		<dependency>
			<groupId>org.jboss.spec.javax.ws.rs</groupId>
			<artifactId>jboss-jaxrs-api_1.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.spec.javax.annotation</groupId>
			<artifactId>jboss-annotations-api_1.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

        <dependency>
            <groupId>org.scribe</groupId>
            <artifactId>scribe</artifactId>
            <version>1.3.5</version>
        </dependency>

        <dependency>
            <groupId>org.ccci</groupId>
            <artifactId>util</artifactId>
            <version>3-SNAPSHOT</version>
            <exclusions>
                <exclusion>
                    <groupId>org.ccci</groupId>
                    <artifactId>cas-client-custom</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.4.7</version>
        </dependency>

        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
        </dependency>

    </dependencies>
	
	<build>
		<!-- Maven will append the version to the finalName (which is the name given to the generated war, and hence the context root) -->
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
                <configuration>
                    <webResources>
                        <resource>
                            <filtering>true</filtering>
                            <directory>src/main/webapp</directory>
                            <includes>
                                <include>**/web.xml</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>

			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.15</version>
				<configuration>
					<groups>unittest,dbtest</groups>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<compilerArgument>-proc:none</compilerArgument>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.bsc.maven</groupId>
				<artifactId>maven-processor-plugin</artifactId>
				<version>2.0.5</version>
				<executions>
					<execution>
						<id>process</id>
						<goals>
							<goal>process</goal>
						</goals>
						<phase>generate-sources</phase>
						<configuration>
							<!-- source output directory -->
							<outputDirectory>target/generated-sources/annotations</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>target/generated-sources/annotations</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>1.0.1.Final</version>
                <configuration>
                    <hostname>${deployments.targetServerIP}</hostname>
                    <username>deployer</username>
                    <password>${env.deployerPassword}</password>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.1.1</version>
                <executions>
                    <!-- The exec plugin is used to execute UnittestDatabaseBuilder class's main method before each
                         unittest run to reset the database to a known starting state -->

                    <execution>
                        <id>1</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>org.cru.crs.migration.UnittestDatabaseBuilder</mainClass>
                            <arguments>
                            </arguments>
                            <classpathScope>test</classpathScope>
                        </configuration>
                    </execution>

                    <!-- The exec plugin is used to execute DatabaseMigrations class's main method when ${migrations.execute is true} -->

                    <execution>
                        <id>2</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>org.cru.crs.migration.DatabaseMigration</mainClass>
                            <commandlineArgs>
                                ${migrations.execute} ${migrations.environment}
                            </commandlineArgs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>local</id>
            <properties>
                <relay.serviceUrl>http://localhost:8080/eventhub-api/rest/auth/relay/login</relay.serviceUrl>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>

        <profile>
            <id>stage</id>
            <properties>
                <relay.serviceUrl>https://api.stage.eventregistrationtool.com/eventhub-api/rest/auth/relay/login</relay.serviceUrl>
            </properties>
        </profile>

        <profile>
            <id>prod</id>
            <properties>
                <relay.serviceUrl>https://api.eventregistrationtool.com/eventhub-api/rest/auth/relay/login</relay.serviceUrl>
            </properties>
        </profile>

    </profiles>
</project>
